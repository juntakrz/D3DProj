//cube vertices
		/*std::vector<V> vertices(8);
		vertices[0].pos = { -coord, -coord, -coord };
		vertices[1].pos = {  coord, -coord, -coord };
		vertices[2].pos = { -coord,  coord, -coord };
		vertices[3].pos = {  coord,  coord, -coord };
		vertices[4].pos = { -coord, -coord,  coord };
		vertices[5].pos = {  coord, -coord,  coord };
		vertices[6].pos = { -coord,  coord,  coord };
		vertices[7].pos = {  coord,  coord,  coord };

		//cube indices
		std::vector<uint16_t> indices =
		{							//face (2 triangles)
			0, 2, 1,	2, 3, 1,	//0
			1, 3, 5,	3, 7, 5,	//1
			2, 6, 3,	3, 6, 7,	//2
			4, 5, 7,	4, 7, 6,	//3
			0, 4, 2,	2, 4, 6,	//4
			0, 1, 4,	1, 5, 4		//5
		};*/

		std::vector<V> vertices(14);
		vertices[0].pos =  { -coord, -coord, -coord };//				4		5
		vertices[0].tex =  { 0.0f, 1.0f };
		vertices[1].pos =  { -coord,  coord, -coord };//
		vertices[1].tex =  { 0.0f, 0.0f };
		vertices[2].pos =  {  coord,  coord, -coord };//		7		1		2		8
		vertices[2].tex =  { 1.0f, 0.0f };
		vertices[3].pos =  {  coord, -coord, -coord };
		vertices[3].tex =  { 1.0f, 1.0f };
		vertices[4].pos =  { -coord,  coord,  coord };//		6		0		3		9
		vertices[4].tex =  { 0.0f, 1.0f };
		vertices[5].pos =  {  coord,  coord,  coord };
		vertices[5].tex =  { 1.0f, 1.0f };
		vertices[6].pos =  { -coord, -coord,  coord };//				10		11
		vertices[6].tex =  { 1.0f, 1.0f };
		vertices[7].pos =  { -coord,  coord,  coord };
		vertices[7].tex =  { 1.0f, 0.0f };
		vertices[8].pos =  {  coord,  coord,  coord };//				12		13
		vertices[8].tex =  { 0.0f, 0.0f };
		vertices[9].pos =  {  coord, -coord,  coord };
		vertices[9].tex =  { 0.0f, 1.0f };
		vertices[10].pos = { -coord, -coord,  coord };
		vertices[10].tex = { 0.0f, 0.0f };
		vertices[11].pos = {  coord, -coord,  coord };
		vertices[11].tex = { 1.0f, 0.0f };
		vertices[12].pos = { -coord,  coord,  coord };
		vertices[12].tex = { 0.0f, 1.0f };
		vertices[13].pos = {  coord,  coord,  coord };
		vertices[13].tex = { 1.0f, 1.0f };

		std::vector<uint16_t> indices =
		{
			0, 1, 2,	0, 2, 3,
			1, 4, 5,	1, 5, 2,
			6, 7, 1,	6, 1, 0,
			3, 2, 8,	3, 8, 9,
			10, 0, 3,	10, 3, 11,
			12, 10, 11, 12, 11, 13
		};